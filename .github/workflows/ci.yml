name: cicd

on:
  push:
    branches:
      - 'feature/**'
      - devel
      - stage
      - main

jobs:
  build-app:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.1
      with:
        node-version: 20
        
    - name: Install dependencies
      run: npm install

    - name: Run build
      run: npm run build

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: build/
        retention-days: 1

  deploy-app:
    runs-on: ubuntu-latest
    needs: build-app
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: build-artifact
    - name: Display structure of downloaded files
      run: ls -R

  build-infra:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Terraform fmt
      id: fmt
      run: terraform -chdir=terraform/ fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform -chdir=terraform/ init

    - name: Terraform Validate
      id: validate
      run: terraform -chdir=terraform/ validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform -chdir=terraform/ plan -out=tfplan -no-color

    - name: Upload tfplan artifact
      uses: actions/upload-artifact@v4
      with:
        name: plan-artifact
        path: terraform/tfplan
        retention-days: 1

  apply-infra:
    runs-on: ubuntu-latest
    needs: build-infra
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - uses: actions/download-artifact@v4
      with:
        name: infra-artifact
    - name: Display structure of downloaded files
      run: ls -R

    - name: Terraform Init
      id: init
      run: terraform -chdir=terraform/ init

    - name: Manual Approval
      uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: cristobalzuluaga
        minimum-approvals: 1
        issue-title: "Deploying Infra to AWS"
        issue-body: "Please approve or deny the deployment"
        exclude-workflow-initiator-as-approver: false

    - name: Terraform Apply
      id: apply
      run: terraform -chdir=terraform/ apply tfplan -no-color --auto-approve
