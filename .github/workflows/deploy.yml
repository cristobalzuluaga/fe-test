name: Deploy Application and Infrastructure

on:
  push:
    branches:
      - dev
      - stage
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  TF_VAR_branch_ref: ${{ github.ref }}

jobs:
  deploy-infra:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Terraform Init
      id: init
      run: terraform -chdir=terraform/ init

    - name: Terraform Plan
      id: plan
      run: terraform -chdir=terraform/ init

    - name: Manual Approval
      uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: cristobalzuluaga
        minimum-approvals: 1
        issue-title: "Deploying Infra to AWS"
        issue-body: "Please approve or deny the deployment"
        exclude-workflow-initiator-as-approver: false

    - name: Terraform Apply
      id: apply
      run: terraform -chdir=terraform/ apply -auto-approve -no-color 

    - name: Terraform Outputs
      id: outputs
      run: terraform -chdir=terraform/ output -json > tfout.json

    - name: Upload tfout artifact
      uses: actions/upload-artifact@v4
      with:
        name: out-artifact
        path: tfout.json
        retention-days: 1

  deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-infra

    steps:
    - uses: actions/checkout@v3
    - name: Download tfout artifact
      uses: actions/download-artifact@v4
      with:
        name: out-artifact

    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.1
      with:
        node-version: 20

    - name: Install dependencies
      run: npm install

    - name: Run build
      run: npm run build

    - name: Deploy to S3
      run: |
        bucket_name=$(cat tfout.json | jq .bucket_name.value)
        aws s3 sync ./build/ s3://${bucket_name}/ --delete
    
    - name: Cloudfront cache invalidation
      run: |
        cf_dist=$(cat tfout.json | jq .cloudfront_dist.value)
        aws cloudfront create-invalidation --distribution-id ${cf_dist} --paths "/*"
